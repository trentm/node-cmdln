# from triton

- The 'shortcut' commands use `handlerFromSubcmd(...).dispatch`. That
  doesn't run the subcmd class's `.init()` method. node-cmdln should provide
  a way to do this. ... basically want to call the *main()* but with preparsed
  options. Perhaps the init/fini should move into dispatch?


# errHelp

- follow up ticket for '-E' or something:
  * - a concern with following errHelp output is that you cannot use the last
  *   lines for parsing error output. Want a `triton -E` or similar (see
  *   imgadm optionfor this) for parsable JSON last error line.
  Some fields that might be nice to have on this summary line:
      argv: original argv
      err: if there was an error, details here: message, code, stack
      exitStatus
      elapsedS


# bash completion

Some thoughts. See `npm completion` for some inspiration.

- Having dashdash option types of 'path', 'file', 'dir' that were basically just
  completion type annotations on regular 'str' might be helpful.
- Need/want type annotations on the args. Then node-manta would want to provide
  special completion handling for "mantaPath" type.
- Ultimately want a fallback to custom control via a `Cmdln.do_foo.completion`.
- dashdash itself should provide option completion to support bash completion
  simple commands


# other

- doc helpOpts, helpBody, etc.
- tests and docs for _ -> - translation in sub-command names
- doc `init` usage (--version example). Doc `this.opts` for global parsed
  opts.
- doc `return callback(false)` ?
- update README for current usage
- make do_help optional (see helpCmd in ctor)
- `debug: true` option to  ctor for the debug logging
- test with imgadm, imgapi-cli

# someday/maybe

- interactive shell (a la cmdln.py)
